{"version":3,"file":"static/js/240.bdb03d7f.chunk.js","mappings":"sZAoHA,EAhGqB,WAEjB,OAAsCA,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3B,GAAgCL,EAAAA,EAAAA,UAAqB,IAArD,eAAOM,EAAP,KAAiBC,EAAjB,KACA,GAAgCP,EAAAA,EAAAA,WAAS,GAAzC,eAAOQ,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,KACXC,GAAUR,EAAAA,EAAAA,IAAYS,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAyB,CAACC,OAAS,GACrCd,IACAa,EAAuBC,OAAS,GAGpC,IAAMC,EAAiB,yCAAG,kGACtBT,GAAW,GADW,SAEIU,EAAAA,GAAAA,cAFJ,UAEhBC,EAFgB,QAGnBjB,EAHmB,gCAIOgB,EAAAA,GAAAA,aAJP,OAKW,KADvBE,EAJY,QAKJC,YACVZ,EAASa,EAAAA,GAAAA,YAAwBF,EAAWG,KAAKZ,QAASS,EAAWG,KAAKC,aAN5D,OAStBhB,GAAW,GACmB,IAA3BW,EAAYE,YAEPf,EADDJ,EACaiB,EAAYI,KAAKlB,SAASoB,MAAM,EAAE,GAElCN,EAAYI,KAAKlB,UAdf,4CAAH,sDAoBvBqB,EAAAA,EAAAA,YAAU,WACNT,GACH,GAAC,CAACf,IAEH,IAAMyB,EAAc,WAChB1B,GAAeD,EAClB,EAOD,OACI,iBAAK4B,UAAU,iBAAf,WACI,gBAAKA,UAAU,2BAAf,UACI,gBAAKC,IAAKC,EAASC,IAAI,cAE3B,gBAAKH,UAAU,6BAAf,UACI,iBAAKA,UAAU,cAAf,WACI,4FACA,SAAC,KAAD,CAASI,GAAG,SAAZ,UAAqB,sHAG7B,gBAAKJ,UAAU,8BAAf,SACKrB,EAEG0B,MAAMC,KAAKnB,GAAwBoB,KAAI,SAACC,EAAEC,GAAH,OAAa,SAAC,IAAD,GAA+B,gBAAkBA,EAA9D,IAEvChC,EAAS8B,KAAI,SAACG,GAAD,OAAU,SAAC,KAAD,CAAiCA,KAAMA,GAAhBA,EAAKC,IAAtC,MAEpBrC,IAEG,iCACI,gBAAK0B,UAAU,sBAAf,UACI,iBAAKA,UAAU,cAAf,WACI,uFACA,iBAAKA,UAAU,sBAAf,WACI,iBAAMY,QAASb,EAAf,UAA4B,SAACc,EAAA,EAAD,OAC5B,iBAAMD,QAhCf,WACf/B,EAASa,EAAAA,GAAAA,WAAsB,IAC/BT,EAAS,SACZ,EA6B2B,sGAIZ,gBAAKe,UAAU,8BAAf,SACKrB,GAAaL,EAEV+B,MAAMC,KAAK,CAAClB,OAAQ,IAAImB,KAAI,SAACC,EAAGC,GAAJ,OAAc,SAAC,IAAD,GAA+B,gBAAkBA,EAA/D,IAE5B1B,EAAQc,MAAM,EAAG,GAAGU,KAAI,SAACG,GAAD,OAAU,SAAC,KAAD,CAAiCA,KAAMA,GAAhBA,EAAKC,IAAtC,SAGvCvC,IAEG,SAAC,KAAD,CACI2B,YAAaA,EACbe,YAAa,KAAMC,GAAI,KACvBC,YAAa,SAGhC,C","sources":["pages/Posts/ProfilePage/ProfilePosts.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\"\r\nimport 'pages/Posts/ProfilePage/ProfilePosts.scss'\r\nimport {PostType} from \"typings\";\r\nimport banner3 from \"assets/images/banner3.jpg\"\r\nimport banner2 from \"assets/images/banner2-edited2-cropped.jpg\"\r\nimport banner4 from \"assets/images/banner4.jpg\"\r\nimport banner5 from \"assets/images/banner5.jpg\"\r\nimport {FormOutlined} from '@ant-design/icons';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AddPost} from \"components/Main\";\r\nimport {useNavigate} from \"react-router\";\r\nimport {postsAPI} from \"api/postsAPI\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getMe, getMyPosts} from \"redux/Selectors\";\r\nimport {PublicationShort} from \"pages/Posts\";\r\nimport {PublicationShortSkeleton} from \"components/Skeletons\";\r\nimport {useAppDispatch} from \"redux/reduxStore\";\r\nimport {postActions} from \"redux/Actions\";\r\n\r\n\r\nconst ProfilePosts = () => {\r\n\r\n    const [isPostAdding, setPostAdding] = useState(false);\r\n    const isAuth = useSelector(getMe)\r\n    const [topPosts, setTopPosts] = useState<PostType[]>([])\r\n    const [isLoading, setLoading] = useState(false)\r\n    const dispatch = useAppDispatch()\r\n    const myPosts = useSelector(getMyPosts)\r\n    const navigate = useNavigate()\r\n\r\n    const NumberOfDisplayedPosts = {length : 3}\r\n    if(!isAuth) {\r\n        NumberOfDisplayedPosts.length = 6\r\n    }\r\n\r\n    const loadMainPagePosts = async () => {\r\n        setLoading(true)\r\n        const responseTop = await postsAPI.getTopPosts()\r\n        if(isAuth){\r\n            const responseMy = await postsAPI.getMyPosts()\r\n            if(responseMy.resultCode === 0) {\r\n                dispatch(postActions.loadMyPosts(responseMy.data.myPosts, responseMy.data.totalCount))\r\n            }\r\n        }\r\n        setLoading(false)\r\n        if(responseTop.resultCode === 0) {\r\n            if(isAuth) {\r\n                setTopPosts(responseTop.data.topPosts.slice(0,3))\r\n            } else {\r\n                setTopPosts(responseTop.data.topPosts)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        loadMainPagePosts()\r\n    },[isAuth])\r\n\r\n    const postHandler = () => {\r\n        setPostAdding(!isPostAdding)\r\n    }\r\n    const setMyPosts = () => {\r\n        dispatch(postActions.pickMyTab(true))\r\n        navigate(\"/posts\")\r\n    }\r\n\r\n\r\n    return  (\r\n        <div className=\"profile__posts\">\r\n            <div className=\"profile__posts-animation\">\r\n                <img src={banner2} alt='banner'/>\r\n            </div>\r\n            <div className=\"profile__posts-recommended\">\r\n                <div className=\"description\">\r\n                    <span>Популярные</span>\r\n                    <NavLink to=\"/posts\"><span>Посмотреть все</span></NavLink>\r\n                </div>\r\n            </div>\r\n            <div className=\"profile__posts-publications\">\r\n                {isLoading\r\n                    ?\r\n                    Array.from(NumberOfDisplayedPosts).map((_,index) => <PublicationShortSkeleton key={'skeletonShort' + index}/>)\r\n                    :\r\n                    topPosts.map((item) => <PublicationShort key={item._id} item={item}/>)}\r\n            </div>\r\n            {isAuth\r\n                &&\r\n                <>\r\n                    <div className=\"profile__posts-mine\">\r\n                        <div className=\"description\">\r\n                            <span>Мои статьи</span>\r\n                            <div className=\"description-options\">\r\n                                <span onClick={postHandler}><FormOutlined/></span>\r\n                                <span onClick={setMyPosts}>Посмотреть все</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"profile__posts-publications\">\r\n                        {isLoading && isAuth\r\n                            ?\r\n                            Array.from({length: 3}).map((_, index) => <PublicationShortSkeleton key={'skeletonShort' + index}/>)\r\n                            :\r\n                            myPosts.slice(0, 3).map((item) => <PublicationShort key={item._id} item={item}/>)}\r\n                    </div>\r\n                </>}\r\n            {isPostAdding\r\n                &&\r\n                <AddPost\r\n                    postHandler={postHandler}\r\n                    currentPost={null} id={null}\r\n                    getPostById={null}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePosts"],"names":["useState","isPostAdding","setPostAdding","isAuth","useSelector","getMe","topPosts","setTopPosts","isLoading","setLoading","dispatch","useAppDispatch","myPosts","getMyPosts","navigate","useNavigate","NumberOfDisplayedPosts","length","loadMainPagePosts","postsAPI","responseTop","responseMy","resultCode","postActions","data","totalCount","slice","useEffect","postHandler","className","src","banner2","alt","to","Array","from","map","_","index","item","_id","onClick","FormOutlined","currentPost","id","getPostById"],"sourceRoot":""}